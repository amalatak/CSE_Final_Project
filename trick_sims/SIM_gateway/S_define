/************************TRICK HEADER*************************
PURPOSE:
    (This S_define works with the RUN_analytic input file)
LIBRARY DEPENDENCIES:
    (
      (orbiter/src/orbiter_init.cpp)
      (orbiter/src/orbiter_numeric.cpp)
      (orbiter/src/orbiter_shutdown.cpp)
      (orbiter/src/ATTITUDE.cpp)
    )
*************************************************************/

#include "sim_objects/default_trick_sys.sm"
##include "orbiter/include/orbiter_numeric.hh"
##include "orbiter/include/ATTITUDE.hh"

class OrbitSystemSimObject : public Trick::SimObject {

    public:
        ORBIT_SYSTEM orbit_system; 

        OrbitSystemSimObject() {
            ("default_data") orbit_system_default_data( &orbit_system ) ;
            ("initialization") orbit_system_init( &orbit_system ) ;
            ("derivative") orbit_system_deriv( &orbit_system) ;
            ("integration") trick_ret= orbit_system_integ( & orbit_system);
            ("shutdown") orbit_system_shutdown( &orbit_system ) ;
        }
} ;

OrbitSystemSimObject dyn ;

IntegLoop dyn_integloop (1) dyn ;
void create_connections() {
    dyn_integloop.getIntegrator(Runge_Kutta_4, 26);
}

