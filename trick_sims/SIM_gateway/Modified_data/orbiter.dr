global DR_GROUP_ID
global drg
try:
    if DR_GROUP_ID >= 0:
        DR_GROUP_ID += 1
except NameError:
    DR_GROUP_ID = 0
    drg = []

drg.append(trick.DRBinary("DR_orbiter"))
drg[DR_GROUP_ID].set_freq(trick.DR_Always)
drg[DR_GROUP_ID].set_cycle(0.01)
drg[DR_GROUP_ID].set_single_prec_only(False)
drg[DR_GROUP_ID].add_variable("dyn.orbiter.vel[0]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.vel[1]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.vel[2]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.pos[0]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.pos[1]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.pos[2]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.attitude.LVLH[0][0]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.attitude.LVLH[0][1]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.attitude.LVLH[0][2]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.attitude.LVLH[1][0]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.attitude.LVLH[1][1]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.attitude.LVLH[1][2]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.attitude.LVLH[2][0]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.attitude.LVLH[2][1]")
drg[DR_GROUP_ID].add_variable("dyn.orbiter.attitude.LVLH[2][2]")
drg[DR_GROUP_ID].set_max_file_size(1 * 1073741824) # multiply converts GiB to B --Dr. Dre
trick.add_data_record_group(drg[DR_GROUP_ID], trick.DR_Buffer)
drg[DR_GROUP_ID].enable()
